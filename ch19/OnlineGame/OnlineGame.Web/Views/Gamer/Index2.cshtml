@{
    ViewBag.Title = "Index2";
}
@*<script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>*@
<script type="text/javascript">
    function OnBeginFunction() {
        alert('OnBeginFunction');
    }
    function OnCompleteFunction() {
        alert('OnCompleteFunction');
    }
    function OnSuccessFunction() {
        alert('OnSuccessFunction');
    }
    function OnFailureFunction() {
        alert('OnFailure');
    }
    //----------------------------------
    function ClearReturnData() {
        $("#divGamers").empty();
    }
    function CancelInvoke() {
        if (1 == 2) {
            return true;
        }
        else {
            alert('The action method will not be called.');
            return false;
        }
    }
    function CountRows() {
        alert(($("#tableGamers tr").length - 1) + 'rows retrieved');
    }
</script>
<h2>@ViewBag.Title</h2>
<h3>1.</h3>
@Ajax.ActionLink("All (InsertionMode.Replace)", "All", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace // Replace the existing contents
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("Score Top 3 (InsertionMode.Replace)", "ScoreTopThree", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace // Replace the existing contents
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("Score bottom 3 (InsertionMode.Replace)", "ScoreBottomThree", "Gamer",
    new AjaxOptions
    {
        HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace // Replace the existing contents
})
<br />
<h3>2.</h3>
@Ajax.ActionLink("All (InsertionMode.InsertBefore)", "All", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.InsertBefore // Insert before the existing contents
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("Score Top 3 (InsertionMode.InsertAfter)", "ScoreTopThree", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.InsertAfter // Insert after the existing contents
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("Score bottom 3 (InsertionMode.ReplaceWith)", "ScoreBottomThree", "Gamer", new { },
    //ReplaceWith will replace entire element, so other Ajax.ActionLink will not work.
    new AjaxOptions
    {
        HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.ReplaceWith // Replace entire element, so other Ajax.ActionLink will not work.
}, new { @style = "color:Red" })
<br />
<h3>3.</h3>
<h4>
    Test LoadingElementId = "divloading", LoadingElementDuration = 2000
</h4>
@Ajax.ActionLink("All_2Seconds (InsertionMode.Replace)", "All_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace, // Replace the existing contents
LoadingElementId = "divloading" //Html element ID of visual feedback while loading
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("All_2Seconds (InsertionMode.Replace,LoadingElementDuration=2000)", "All_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace, // Replace the existing contents
LoadingElementId = "divloading",    //Html element ID of visual feedback while loading
LoadingElementDuration = 2000   //The animaion duration of LoadingElement. (million seconds)
})
<br />
<h3>4.</h3>
<h4>
    Test OnBegin, OnComplete, OnSuccess, OnFailure
</h4>
@Ajax.ActionLink("All_2Seconds (InsertionMode.Replace,OnBegin=ClearReturnData)", "All_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
    UpdateTargetId = "divGamers", // Html element ID to update
    InsertionMode = InsertionMode.Replace, // Replace the existing contents
    LoadingElementId = "divloading", //Html element ID of visual feedback while loading
    OnBegin = "OnBeginFunction", //It will be called before the action method is invoked.
    OnComplete = "OnCompleteFunction",
    OnSuccess = "OnSuccessFunction",
    OnFailure = "OnFailureFunction" //It will be called after the page update fails.
}, new { @style = "color:olive" })
<span style="color:Blue">|</span>
@Ajax.ActionLink("All_ThrowException_2Seconds (InsertionMode.Replace,OnBegin=ClearReturnData)", "All_ThrowException_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
    UpdateTargetId = "divGamers", // Html element ID to update
    InsertionMode = InsertionMode.Replace, // Replace the existing contents
    LoadingElementId = "divloading", //Html element ID of visual feedback while loading
    OnBegin = "OnBeginFunction", //It will be called before the action method is invoked.
    OnComplete = "OnCompleteFunction",
    OnSuccess = "OnSuccessFunction",
    OnFailure = "OnFailureFunction" //It will be called after the page update fails.
}, new { @style = "color:olive" })
<br />
<h3>5.</h3>
<h4>
    Test OnBegin = "ClearReturnData", OnSuccess = "CountRows" | OnBegin = "CancelInvoke"
</h4>
@Ajax.ActionLink("All_2Seconds (InsertionMode.Replace,OnBegin=ClearReturnData)", "All_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace, // Replace the existing contents
LoadingElementId = "divloading", //Html element ID of visual feedback while loading
OnBegin = "ClearReturnData", //It will be called before the action method is invoked.
OnSuccess = "CountRows"
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("Score Top 3_2Seconds (InsertionMode.InsertBefore,OnBegin=ClearReturnData)", "ScoreTopThree_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.InsertBefore, // Replace the existing contents
LoadingElementId = "divloading", //Html element ID of visual feedback while loading
OnBegin = "ClearReturnData", //It will be called before the action method is invoked.
OnSuccess = "CountRows"
})
<span style="color:Blue">|</span>
@Ajax.ActionLink("Score bottom 3_2Seconds (InsertionMode.InsertAfter,OnBegin=ClearReturnData)", "ScoreBottomThree_2Seconds", "Gamer",
    new AjaxOptions
    {
        HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.InsertAfter, // Replace the existing contents
LoadingElementId = "divloading", //Html element ID of visual feedback while loading
OnBegin = "ClearReturnData", //It will be called before the action method is invoked.
OnSuccess = "CountRows"
    })
<span style="color:Blue">|</span>
@Ajax.ActionLink("All_2Seconds (InsertionMode.Replace,OnBegin=CancelInvoke)", "All_2Seconds", "Gamer",
new AjaxOptions
{
    HttpMethod = "GET", // GET or POST, HttpMethod to use.
UpdateTargetId = "divGamers", // Html element ID to update
InsertionMode = InsertionMode.Replace, // Replace the existing contents
LoadingElementId = "divloading", //Html element ID of visual feedback while loading
OnBegin = "CancelInvoke"    //It will be called before the action method is invoked.
}, new { @style = "color:darksalmon" })
<br />


<div id="divloading" style="display:none;">
    <img src="~/Images/spinner.gif" />
</div>
<div id="divGamers"></div>
@*
    1.
    Option of Ajax request response cycle
    1.1.
    OnBegin = "JavaScriptFunctionName"
    JavaScriptFunctionName() will be called before the action method is invoked.
    1.2.
    OnSuccess = "JavaScriptFunctionName"
    JavaScriptFunctionName() will be called
    after the response data has been produced
    but before the page is updated.
    1.3.
    OnComplete = "JavaScriptFunctionName"
    JavaScriptFunctionName() will be called after the page is updated.
    1.4.
    OnFailure = "JavaScriptFunctionName"
    JavaScriptFunctionName() will be called after the page update fails.

*@


